<div class="stekje-card">
  {% if stekje %}
    <h1>{{ stekje.naam }}</h1>

    <div class="stekje-container">
      <div class="stekje-media">
        <picture>
            <!-- Format voor betere compressie -->
          <source type="image/avif" srcset="https://fdnd-agency.directus.app/assets/{{ stekje.foto.id }}?format=avif?width=400&height=400">
          <source type="image/webp" srcset="https://fdnd-agency.directus.app/assets/{{ stekje.foto.id }}?format=webp?width=400&height=400">

            <!-- Fallback voor browsers die niet ondersteunen -->
          <img
            src="https://fdnd-agency.directus.app/assets/{{ stekje.foto.id }}"
            width="{{ stekje.foto.width }}"
            height="{{ stekje.foto.height }}"
            alt="{{ stekje.naam }}"
            loading="lazy"
            style="background: #969494;">
        </picture>
        <div class="stekje-actions">
          {% render 'partials/notification.liquid' %}

          <form
            action="/stekje/{{ stekje.id }}"
            method="POST"
            class="like-form js-form"
            onsubmit="handleLike(event, '✅ Stekje geliked!')">
            <input
              type="hidden"
              name="stekjeid"
              value="{{ stekje.id }}">
            <button type="submit" class="like-button js-submit-button">
              <span class="js-button-text">Like</span>
              <span class="loader js-loader" style="display: none;"></span>
            </button>
          </form>

          <form
            action="/stekje/{{ stekje.id }}/unlike"
            method="POST"
            class="unlike-form js-form"
            onsubmit="handleLike(event, '✅ Stekje unliked!')">
            <input
              type="hidden"
              name="stekjeid"
              value="{{ stekje.id }}">
            <button type="submit" class="unlike-button js-submit-button">
              <span class="js-button-text">Unlike</span>
              <span class="loader js-loader" style="display: none;"></span>
            </button>
          </form>
        </div>
      </div>

      <div class="stekje-info">
        <div class="info-item">
          <strong>Beschrijving:</strong>
          <p>{{ stekje.beschrijving }}</p>
        </div>

        <div class="info-item">
          <strong>Land van herkomst:</strong>
          <p>{{ stekje.land_van_herkomst }}</p>
        </div>

        <div class="info-item">
          <strong>Onderhoud:</strong>
          <p>{{ stekje.onderhoud }}</p>
        </div>

        <div class="info-item">
          <strong>Zonlicht:</strong>
          <p>{{ stekje.zonlicht }}</p>
        </div>

        <div class="info-item">
          <strong>Watergeven:</strong>
          <p>{{ stekje.watergeven }}</p>
        </div>

        <div class="info-item">
          <strong>Voeding:</strong>
          <p>{{ stekje.voeding }}</p>
        </div>

        <div class="info-item">
          <strong>Verpotten:</strong>
          <p>{{ stekje.verpotten }}</p>
        </div>

        <div class="info-item">
          <strong>Temperatuur:</strong>
          <p>{{ stekje.temperatuur }}</p>
        </div>

        <div class="info-item">
          <strong>Giftig voor huisdieren:</strong>
          <p>{{ stekje.giftig }}</p>
        </div>
      </div>

    </div>
  {% else %}
    {% include '../partials/empty-stekje-card.liquid' %}
  {% endif %}
</div>

<script>
  // Loader tonen en verbergen
  document.addEventListener('DOMContentLoaded', function() {
  document.querySelectorAll('.js-form').forEach(form => {
    form.addEventListener('submit', function(e) {
      const button = this.querySelector('.js-submit-button');
      const buttonText = this.querySelector('.js-button-text');
      const loader = this.querySelector('.js-loader');
  
      // Toon loader en verberg tekst
      button.disabled = true;
      if (buttonText) buttonText.style.display = 'none';
      if (loader) loader.style.display = 'inline-block';
      
      // Verberg loader na 1 seconden
      setTimeout(function() {
        button.disabled = false;
        if (buttonText) buttonText.style.display = 'inline-block';
        if (loader) loader.style.display = 'none';
      }, 1000);
    });
  });
  });
      
  // Functie om like/unlike acties af te handelen
  async function handleLike(event, message) {
  
  event.preventDefault(); // dit event zorgt ervoor dat het pagina niet opnieuw reload
  
  const button = event.target.querySelector('button');
  
  button.disabled = true;
  
  try {
    await fetch(event.target.action, {
      method: 'POST',
      body: new URLSearchParams(new FormData(event.target)) // Zet formulierdata om naar URL parameters
    });
    showNotification(message);
  } catch {
    showNotification('Actie mislukt', true);
  }
  
  button.disabled = false;
  }
</script>

<style>
  .stekje-card {
    width: 100%;
    padding: 1rem;
    box-sizing: border-box;
  }

  .stekje-container {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    margin-top: 1rem;
  }

  .stekje-media {
    width: 100%;
  }

  .stekje-media img {
    width: 100%;
    max-height: 300px;
    border-radius: 0.5rem;
    object-fit: cover;
  }

  .stekje-info {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.25rem;
  }

  .info-item {
    margin-bottom: 0;
  }

  .info-item strong {
    display: block;
    margin-bottom: 0.5rem;
    font-size: 1rem;
    color: #2d3748;
  }

  .info-item p {
    margin: 0;
    font-size: 1rem;
  }

  .stekje-actions {
    margin-top: 2rem;
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
  }

  .like-button,
  .unlike-button {
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 0.4rem;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 500;
    min-width: 100px;
    transition: all 0.2s ease;
  }

  .like-button {
    background-color: #4CAF50;
    color: white;
  }

  .unlike-button {
    background-color: #f44336;
    color: white;
  }

  .like-button:hover {
    background-color: #45a049;
    transform: translateY(-1px);
  }

  .unlike-button:hover {
    background-color: #d32f2f;
    transform: translateY(-1px);
  }

  .like-button:active,
  .unlike-button:active {
    transform: translateY(1px);
  }

  @media (min-width: 768px) {
    .stekje-card {
      padding: 1.5rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    .stekje-container {
      flex-direction: row;
      gap: 2rem;
      margin-top: 1.5rem;
    }

    .stekje-media {
      flex: 0 0 45%;
      align-self: flex-start;
    }

    .stekje-info {
      flex: 1;
      gap: 1.5rem;
    }
  }

  @media (min-width: 1024px) {
    .stekje-container {
      gap: 3rem;
    }

    .stekje-media {
      flex: 0 0 40%;
    }

    .stekje-info {
      grid-template-columns: repeat(2, 1fr);
    }

    .stekje-actions {
      margin-top: 2.5rem;
    }
  }

  /* Loader */
  .loader {
    color: var(--secondary-text-color);
    border: 2px solid #f3f3f3;
    border-top: 2px solid #3498db;
    border-radius: 50%;
    align-self: center;
    width: 16px;
    height: 16px;
    animation: spin 0.1s linear infinite;
    display: inline-block;
    vertical-align: middle;
    margin-left: 8px;
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  button[disabled] {
    opacity: 0.7;
    cursor: not-allowed;
  }
</style>